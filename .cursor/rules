# Cursor AI 助手行为规则

## 项目概述
这是一个基于 Vue 3 + TypeScript + Pinia 的 UniApp 跨平台开发模板项目，集成了完整的开发工具链和组件库。

## 代码风格规范

### 语言偏好
- 始终使用中文简体回复
- 代码注释使用中文
- 变量和函数名使用英文，遵循驼峰命名法

### 代码规范
- 使用 TypeScript 进行类型定义
- 遵循 Vue 3 Composition API 最佳实践
- 使用 Pinia 进行状态管理
- 样式文件使用 SCSS，单位统一为 px
- 组件使用 PascalCase 命名
- 文件使用 kebab-case 命名

### 项目结构
- 页面放在 `src/pages/` 目录
- 组件放在 `src/components/` 目录
- 工具函数放在 `src/utils/` 目录
- 类型定义放在 `src/types/` 目录
- 状态管理放在 `src/state/` 目录

## 开发指导原则

### 组件开发
- 优先使用 Vue 3 Composition API
- 组件必须包含 TypeScript 类型定义
- 使用 `<script setup lang="ts">` 语法
- 组件样式文件命名为 `index.scss`

### 样式规范
- 统一使用 px 单位
- 使用 SCSS 预处理器
- 遵循 BEM 命名规范
- 使用 CSS 变量定义主题色彩

### API 请求
- 使用项目封装的请求库
- 请求类型定义放在 `src/request/types/` 目录
- 使用拦截器处理通用逻辑

### 状态管理
- 使用 Pinia 进行状态管理
- Store 文件放在 `src/state/` 目录
- 使用组合式函数封装业务逻辑

## 特殊要求

### 平台兼容性
- 代码必须兼容微信小程序、H5、App 等多个平台
- 使用 UniApp 提供的跨平台 API
- 避免使用平台特定的代码

### 性能优化
- 合理使用组件懒加载
- 避免不必要的重渲染
- 优化图片和资源加载

### 代码质量
- 使用 ESLint 进行代码检查
- 遵循 TypeScript 严格模式
- 编写清晰的注释和文档

## 禁止事项
- 不要使用 rpx 单位（已统一转换为 px）
- 不要使用 Vue 2 的选项式 API
- 不要使用 any 类型（除非必要）
- 不要硬编码平台特定逻辑

## 推荐实践
- 使用 TypeScript 严格类型检查
- 组件设计遵循单一职责原则
- 合理使用组合式函数复用逻辑
- 保持代码结构清晰和可维护性 